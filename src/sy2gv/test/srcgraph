#!/usr/bin/python2

import sys, os, time, argparse
import subprocess as sp
def parse_args():
	parser = argparse.ArgumentParser(description = 'Program for converting source code\nto a useful UML diagram')
	parser.add_argument('input')
	parser.add_argument('-o', '--output', default = 'pic.pdf', help = 'Define an output file')
	parser.add_argument('-t', '--type', default = 'pdf', help = 'Must be either: [pdf, jpg, png]')
	parser.add_argument('-c', '--cmd', default = 'evince', help = 'Specify a cmd to run the result with')
	#parser.add_argument('-k', '--keep', default = 'True', help = 'keep extra files')

	return parser.parse_args()

def main(argv):

	options = parse_args()

	sp.call(['srcml', '--register-ext', 'h=C++', options.input, '-o', 'class_file_test.hpp.xml'])# '--register-ext', 'h=C++',
	print "[=	Finished srcml..."
	sp.call(['srcyuml', 'class_file_test.hpp.xml', 'class_file_test.hpp.yuml'])
	print "[=	Finished srcyuml..."
	sp.call(['srcYUML2graphViz.py', 'class_file_test.hpp.yuml', 'class_file_test.outxt'])
	print "[=	Finished conversion..."

	if options.type == 'pdf':
		sp.call(['dot', '-T', options.type, 'class_file_test.outxt', '-o', options.output])

	else:
		sp.call(['dot', '-T', options.type, '-Gdpi=1500', 'class_file_test.outxt', '-o', options.output])
		options.cmd = 'eog'

	print "[=	Finished picture..."
	#sp.call(['rm', 'class_file_test.hpp.xml', 'class_file_test.hpp.yuml', 'class_file_test.outxt'])

	print "[=	Removed extra files..."
	print "[=	Completed!"
	sp.call([options.cmd, options.output])


if __name__ == '__main__':
	main(sys.argv)
