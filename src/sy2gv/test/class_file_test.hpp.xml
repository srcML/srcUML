<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" revision="0.9.5" language="C++" filename="example_4.hpp"><class>class <name>taco</name><block>{<private type="default">
</private><public>public:
	<function_decl><specifier>virtual</specifier> <type><name>void</name></type> <name>make</name><parameter_list>()</parameter_list> = <literal type="number">0</literal>;</function_decl>
	<function_decl><specifier>virtual</specifier> <type><name>void</name></type> <name>eat</name><parameter_list>()</parameter_list> = <literal type="number">0</literal>;</function_decl>
	<function_decl><specifier>virtual</specifier> <type><name>void</name></type> <name>addCheese</name><parameter_list>()</parameter_list> = <literal type="number">0</literal>;</function_decl>
	<function_decl><specifier>virtual</specifier> <type><name>void</name></type> <name>addMeat</name><parameter_list>()</parameter_list> = <literal type="number">0</literal>;</function_decl>
</public>}</block>;</class>

<class>class <name>myTaco</name><super_list>: <super><name>taco</name></super></super_list><block>{<private type="default">
</private><public>public:
	<function><type><name>void</name></type> <name>make</name><parameter_list>()</parameter_list><block>{
		<expr_stmt><expr><name>count</name><operator>++</operator></expr>;</expr_stmt>
		<decl_stmt><decl><type><name>myTaco</name></type> <name>theTaco</name></decl>;</decl_stmt>
	}</block></function><empty_stmt>;</empty_stmt>
	<function><type><name>void</name></type> <name>eat</name><parameter_list>()</parameter_list><block>{
		<expr_stmt><expr><name>count</name><operator>--</operator></expr>;</expr_stmt>
	}</block></function><empty_stmt>;</empty_stmt>
	<function><type><name>void</name></type> <name>addCheese</name><parameter_list>()</parameter_list><block>{
		<expr_stmt><expr><name>cheese</name> <operator>=</operator> <literal type="string">"American"</literal></expr>;</expr_stmt>
	}</block></function><empty_stmt>;</empty_stmt>
	<function><type><name>void</name></type> <name>addMeat</name><parameter_list>()</parameter_list><block>{
		<expr_stmt><expr><name>meat</name> <operator>=</operator> <literal type="string">"ham"</literal></expr>;</expr_stmt>
	}</block></function><empty_stmt>;</empty_stmt>
</public><private>private:
	<decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>cheese</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>meat</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name><name>std</name><operator>::</operator><name>string</name></name></type> <name>count</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name>bool</name></type> <name>eaten</name></decl>;</decl_stmt>
</private>}</block>;</class></unit>
